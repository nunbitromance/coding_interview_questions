Careercup: https://www.careercup.com/page?pid=amazon-interview-questions&job=software-development-manager-interview-questions&n=1

STAR stands for:

* Situation - What was the situation you / your previous employer faced?
* Task - What tasks were involved in that situation?
* Action - What actions did you take?
* Results - What were the results of those actions?

Customer Obsession
Leaders start with the customer and work backwards. They work vigorously to earn and keep customer trust. Although leaders pay 
attention to competitors, they obsess over customers.
- Example 1: "Constantly monitor FB feedback. Customer complaint about payment"
  S: Customers were reporting issues on Facebook that they were seeing wrong price charged on credit card for installment. 
  T: My objective was to constantly monitor our system but also detect any external feedbacks that we might be missing.
  A: I investigated and suggested that we add descriptors to payment transactions. Also, followed up with customers.
  R: Customers reported that their issues were fixed. Thank you feedback on SNS is good way to earn new customers.
- Example 2: "Fuzzy Search"
  S: Customers satisfaction with zulily search functionality was very low. Customers were not finding products that they liked.
  T: My objective was to find different ways to improve search results by brainstorming with PM's. There were many ideas like 
  revamping the search UX.
  A: One of the missing pieces I saw with relatively cheap cost were that search was mainly substring based on contents but not fuzzy matching which was available in ES.
  R: We improved search results by increasing the fuzzy matching score on ES. Experiemented via A/B testing. Saw lift in demand about 1.5%.

Ownership
Leaders are owners. They think long term and don’t sacrifice long-term value for short-term results. They act on behalf of the 
entire company, beyond just their own team. They never say “that’s not my job." 
- Example 1: "Site Dev Manager gone"
  S: Site dev manager was let go. Site engineers were having difficulty with performance issues. 
  T: My objective was to help the company and engineer deal and resolve the issue asap.
  A: I started coordinating different engineers in the site team. Came up with the plan to investigate the suspicious areas with 
  the site engineers.
  R: Issue was fixed and I was recognized for jumping into areas beyohnd my responsibilities.
- Example 2: "Customer Support application is having issues"
  S: CS application team is short on engineers. The app talks to platform team via api.
  T: My objective was to help the company and engineer deal with the issue and resolve asap.
  A: I verified that there was no issue on the api and started helping CS application team with the issue to unblock them.
  R: Issue was fixed and I was recognized for continuously helping beyond my responsibilities.

Invent and Simplify
Leaders expect and require innovation and invention from their teams and always find ways to simplify. They are externally aware, 
look for new ideas from everywhere, and are not limited by “not invented here". Because we do new things, we accept that we may be 
misunderstood for long periods of time.
- Example 1: "A/B Testing framework invented over SplitLab"
  S: Existing legacy A/B testing framework was too slow due to multiple redundant api calls and chattiness.
  T: My objective was to improve the latency of the system since A/B testing was so widely used everywhere. from website to api layer.
  A: Engineers and I brainstormed and invented MVTest framework which is client library that encapsulated hashing algorithm to reduce 
  unnecessary chattiness. Only report when there is an override of buckets.
  R: Overall latency was improved by 10% across all the api's.
- Example 2: "Session Service. Redis too expensive"
  S: We had too many redis servers trying to store all customers session data. Redis is in memory store and it is too expensive.
  T: My objective was to come up with more sustainable solution to storing customer sessions.
  A: Engineers and I brainstormed and designed "cold storage" using persistent db like Cassandra.
  R: Overall reduced server capacity by 20% of cost (~20k per month). More cost saving in long run because disk is cheaper.

Are Right, A Lot
Leaders are right a lot. They have strong judgement and good instincts.  They seek diverse perspectives and work to disconfirm their 
beliefs.
- Example 1: "Rollback. Customer Checkout blocked."
  S: Customers were not able to checkout. We were seeing orders count dropping.
  T: My objective was to fix the issue ASAP. 
  A: I had oncall engineer to go through list of check-in's and come up with the potential list of checkin's that might be the culprit.
     Once we had potential candidates, rather than fixing the problem immediately, I had instructed oncall to rollback the code.
  R: Orders started flowing again. Customers were unblocked.
- Example 2: "Mongo upgrade"
  S: Mongo db version was very outdated and performance issues. Time due for upgrade to wired tiger. However, the path was complicated and needed multiple version upgrades and made people nervous.
  T: My objective was to upgrade mongo db to latest.
  A: I coordinated with an engineer to come up with a plan to upgrade step by step. Mongo showed unexpected behavior when versions were mixed. I assessed the situation and realized that mongo synchronization between different versions were causing more churn on the cluster. I pushed forward knowing that it will stabilize once the versions were matched.
  R: Mongo immediately became stable once all the nodes had matching version. Overall, perf. latency was decreased by 15%.

Learn and Be Curious
Leaders are never done learning and always seek to improve themselves. They are curious about new possibilities and act to explore them.
- Example 1: "Kill Spinning wheel"
  S: I was curious about the effect of increasing latency but killing the spinning wheel on event page.
  T: My goal was to see the impact on demand of the trade off
  A: I coordinated with engineer to kill the ajax call and increase the latency and put it on A/B testing at 10%
  R: Demand decreased based on result. Rolled back.
- Example 2: "Cassandra training" => "Redis is expensive"  
  S: Redis was too expensive and we could not contain all customer session data in memory.
  T: Task was to come up with a way to make the architecture more scalable.
  A: I investigated distributed key value storages and picked Cassandra.
  R: 20k savings in server cost. Much more sustainable cost model.

Hire and Develop the Best
Leaders raise the performance bar with every hire and promotion. They recognise people with exceptional talent and willingly move 
them throughout the organisation. Leaders develop leaders and are serious about their role in coaching others.  We work on behalf 
of our people to invent mechanisms for development like Career Choice.
- Example 1: "I want to work on features"
  S: I approached an engineer who wanted to work on features.Hired someone from another company who was struggling because he wanted 
  to do something exciting and challenging and his manager would not let him.
  T: My objective is to take in passionate engineers and help them grow and unleash their potential.
  A: Hired him despite junior experience
  R: Thriving. Worked on very visible project and completed it very successfully.
- Example 2: "I am struggling to find passion in existing project"
  S: Engineer approached me telling me that he is getting bored of working on existing tech stack.
  T: My objective is to help engineers stay passionate and motivated.
  A: I recommended him AWS courses and got him to lead AWS project.
  R: Thriving. Working very passionately using latest serverless technology like AWS Lambda.

Insist on the Highest Standards
Leaders have relentlessly high standards - many people may think these standards are unreasonably high. Leaders are continually 
raising the bar and driving their teams to deliver high quality products, services and processes. Leaders ensure that defects do 
not get sent down the line and that problems are fixed so they stay fixed.
- Example 1: "Mandate metrics / monitoring / alerting on every feature"
  S: When I joined platform team, the team was suffering from lack of monitoring on latency and alerting
  T: My objective was to help engineers realize there is an issue when issue happens.
  A: I mandated each engineer to make sure to include a task for adding alert / metrics on every feature.
  R: Much better oncall work life balance. Can find issues sooner than later.
- Example 2: "SLA on important API's"
  S: When I joined platform team, there was no SLA standard set on important api's such as cart / checkout"
  T: My objective was to provide a guarantee that our customers would have smooth and robust experience shopping on zulily.
  A: I organized tasks for engineer to establish SLA on P50 and P99 across important API's and add alerts
  R: Much better control of Customer Experience and Quality.

Think Big
Thinking small is a self-fulfilling prophecy. Leaders create and communicate a bold direction that inspires results. They think 
differently and look around corners for ways to serve customers.
- Example 1: "AWS Migration of store infrastructure"
  S: Store is moving to AWS. Exciting switch in infrastructure
  T: My objective is to help the company switch to new cloud vendor.
  A: Sat down with engineers and came up with next 6 months plan tasks for migrating 5 major services to AWS without downtime.
  R: In progress but much better feeling to have plans.

Bias for Action
Speed matters in business. Many decisions and actions are reversible and do not need extensive study. We value calculated risk taking. 
- Example 1: "Rollback. Customer Checkout blocked."
- Example 2: "Mongo upgrade."
  S: Mongo version was too outdated. Needed upgrade from 2.0 -> 3.0 -> 3.4
  T: My objective was to upgrade mongo to wiredtiger.
  A: Started upgrade and saw one of the server was acting very volatile at 3.0. Latency increased every 10 minutes or so. Investigated 
  and could not figure out why. Took the risk and continued upgrade.
  R: Successful. Overall latency down by 10%.

Frugality
Accomplish more with less. Constraints breed resourcefulness, self-sufficiency and invention.  There are no extra points for growing 
headcount, budget size or fixed expense.
- Example 1: "Redis too expensive. Cassandra"
- Example 2: "Decommission of New Relic". 
  S: Company was spending a lot of money on NR.
  T: Find aleternatives to NR.
  A: Started investigating and talking to other teams about alternatives.
  R: Switch to Data Dog. Saved 90% of cost.

Earn Trust
 Leaders listen attentively, speak candidly, and treat others respectfully. They are vocally self-critical, even when doing so is 
 awkward or embarrassing.  Leaders do not believe their or their team’s body odour smells of perfume.  They benchmark themselves and 
 their teams against the best.
 - Example 1: "Mandate monitoring / alerting across important API's"
 - Example 2: "Oncall SLA"

Dive Deep
Leaders operate at all levels, stay connected to the details, audit frequently, and are sceptical when metrics and anecdote differ. 
No task is beneath them.
- Example 1: "Mandate monitoring / alerting on core scenarios" 
- Example 2: "MV Test"
- Example 3: "Redis is too expensive. Cassandra"

Have Backbone; Disagree and Commit
Leaders are obligated to respectfully challenge decisions when they disagree, even when doing so is uncomfortable or exhausting.
Leaders have conviction and are tenacious. They do not compromise for the sake of social cohesion. Once a decision is determined, 
they commit wholly.
- Example 1: "AWS move is not making the right pace. 30% not enough. a lot of resistance from PM's. discussed with VP" => increased to 70% effort
- Example 2: "

Deliver Results
Leaders focus on the key inputs for their business and deliver them with the right quality and in a timely fashion. Despite setbacks, 
hey rise to the occasion and never compromise.
- Example 1: "Smart Pay. Payment related. Have to extra detail and metrics important. 20% increase in revenue."
- Example 2: "

Behavioral Questions - Related to 12 Leadership Principles!!!
==================================================================
- give me an example of most difficult/complex project: 
- Example 1: "Groupon - Inventory Management Service"
  S: inventory management. found drifting inventory count.
  T: objective was to make sure inventory count was accurate.
  A: started tracking inventory by inventory and compared what we had vs what warehouse had. found that inventory counting occured at 
  different times. rollback transactions at time X and re-apply.
  R: 99% match in inventory.
- Example 2: "Shipment tracking service"
  S: a lot of maintenance.
  T: objective was to simplify maintanenace
  A: started integration with 3rd party service for tracking in EMEA
  R: 99% accuracy

- give me an example of most exciting project: 
  Smart Pay - 20% revenue

- give me a time when you hired wrong person: Took someone in who was passionate about maintaining existing service that came with him. 
Not willing to learn new languages. Had one on one meeting. documented plan and evaluations on plan for improvement. He did not show 
motivation to improve. Had to put him on performance improvement plan. Had to document his tasks actual vs expected every day. 
Eventually, had to let him go after discussion with HR.

- give me a time when you hired someone who was successful: Hired someone from another company who was struggling because he wanted to 
do something exciting and challenging and his manager would not let him. Joined my team and I gave him in charge of something 
interesting. He took himself to next level and completed project very successfully.

- how do you handle low performers? 
Have a one to one meeting with the engineer. Check with him or her if he is facing any roadblocks in completing his tasks. Document 
plan and evaluations. If required arrange a training course for him or assign a mentor to work with him. Once training is over, 
give him ownership of some tasks and see if there is any improvement. If he expresses interest in some other area of work, help 
him in getting in touch with managers in that area and ensure a smooth transition for him and for the team.

- how do you handle decision conflicts in the team? 
open discussion with all the members and try to draw natural concensus through discussion on alternatives about pros and cons. come 
to agreement. If agreement cannot be reached, disagree and commit. As manager, you need to make a decision and make sure the team 
is moving in the right direction.

- how do you build a team? 
focus on common goals. set expectations for both short term and long term. celebrate success and failures.

- Tell me a project where you had to deliver a product in 6 months and how did you approach planning for it?
"AWS Move"
In any project, the first thing is do understand the requirements in detail and try to come up with a high level estimation based 
on team's velocity. Once the requirements are clear, come up with a detailed level plan which consists of all integrations including 
system testing, regression testing, acceptance testing and project plan. Estimate the stories and try to retrofit it to determine the 
number of sprints required. Also clearly call out all the dependencies, assumptions, key decisions and riks. Come up with an 
implementation plan with sprints dedicated for requirements, coding, testing and soft and actual launch.

- tell me a time when you had to deal with difficult team member.
"Team member unwilling to work in area outside his familiar domain"

- tell me how you made improvement to company.
"MV Test", "Session Service"

- tell me your worst mistake. how did you recover / learn?
S: "My engineer caused P0 issue causing customers unable to register credit cards for 1 hour"
T: my objective was to fix the issue with the engineer, report to stakeholders 
A: make sure monitoring and alerting is working. automation testing in place. followed up with customers for appology.
R: fixed the issue.

- how do you make sure the deliverables are of the right quality? what metrics do you use? 
system metrics. business metrics.

- how do you handle disagreement with your boss?
Stay calm, explain that you feel differently and clearly explain your reasoning. Make a case for it with sound business logic 
rather than emotion. Ultimately if after explaining your case, they manager is unswayed, then it's time to "disagree and commit". 
Since a manager's role is to be strategic and understand the big picture, it's quite possible that they have some exposure to other 
things going on in the company that you aren't aware of which forms the basis for their opinion. Ultimately they are your manager,
but with that said, I've never had a manager that didn't want to hear all sides and make the best decision based on information from 
his/her team members.

- have you ever pushed back on manager? backbone
S: at groupon, I had a manager who wanted to push forward on a aggressive plan for shipment tracking for European countries. I pushed back saying the task was not feasible. 
T: task was to create a service that tracked shipment information from all EMEA packages within one week in time for revenue recognition.
A: came up with a very simple architecture and followed up with more scalable architecture with deficiencies. not a scalable solution. spent night and day to finish the project at bare minimum.
R: was recognized with hard work and followed up with proper plan to make the architecture much more scalable.

- give me a time when you had to proceed on a project with little information.
AWS Migration

- give me a time when you had to work with multiple teams within organization.
AWS Migration

- why Amazon?

=====================================================================
- any relevant deals
- relevant? if it is interest to me, makes sense to me, highly likely to buy. timely
- who determines whether customer is likely to buy?
- dont want to get pushed to buy product
- recommendation based on deals / promotions
- 100 millions of customers
- notification? email? customer engagement?
- what is success measurement? conversion.

use cases
- how to add wishlist? come to amazon. product id and adds to customer's wishlist
- interaction with customer? come to site / app product page
- how do we send notifications with proper cadence? 
- (v2) vendor / supplier get notified on high demand


Users  --------- Website / App ----- Notification -----------Users

DB
Users (id, name, address)
Devices (id, name, device_key, ...)
Product (id, name, description, vendor, )
Wishlist(id, user_id, product_id, creation_time, update_time, notificaiton_time)

Notification 
- notified on discount (product id's)
- user / vendor sends notification messages
- sends out batch of wishlist based on daily product deals to customers
